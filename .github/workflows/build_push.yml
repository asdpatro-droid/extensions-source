name: CI

on:
  release:
  push:
    branches:
      - main
    paths:
      - '**'
      - '!**.md'
      - '!.github/**'
      - '.github/scripts/**'
      - '.github/workflows/build_push.yml'
  workflow_dispatch:

permissions: {}

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

env:
  CI_CHUNK_SIZE: 65
  IS_PR_CHECK: false

jobs:
  prepare:
    name: Prepare job
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      matrix: ${{ steps.generate-matrices.outputs.matrix }}
      delete: ${{ steps.generate-matrices.outputs.delete }}
    steps:
      - name: Checkout main branch
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Java
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          java-version: 17
          distribution: temurin

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@ed408507eac070d1f99cc633dbcf757c94c7933a # v4.4.3
        with:
          cache-read-only: true

      - name: Get last successful CI commit
        uses: nrwl/nx-set-shas@826660b82addbef3abff5fa871492ebad618c9e1 # v4.3.3
        with:
          fallback-sha: 4b825dc642cb6eb9a060e54bf8d69288fbee4904 # empty tree

      - id: generate-matrices
        name: Create output matrices
        run: |
          python ./.github/scripts/generate-build-matrices.py "$NX_BASE" Release

  build:
    name: Build extensions (${{ matrix.chunk.number }})
    needs: prepare
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: ${{ toJson(fromJson(needs.prepare.outputs.matrix).chunk) != '[]' }}
    strategy:
      matrix: ${{ fromJSON(needs.prepare.outputs.matrix) }}
    steps:
      - name: Checkout main branch
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Set up Java
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          java-version: 17
          distribution: temurin

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@ed408507eac070d1f99cc633dbcf757c94c7933a # v4.4.3
        with:
          cache-read-only: ${{ matrix.chunk.number > 1 }}

     # - name: Prepare signing key
     #   run: |
     #     echo ${{ secrets.SIGNING_KEY }} | base64 -d > signingkey.jks

      - name: Build extensions (${{ matrix.chunk.number }})
        env:
          MODULES: ${{ join(matrix.chunk.modules, ' ') }}
          ALIAS: ${{ secrets.ALIAS }}
     #     KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
     #     KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          ./gradlew $MODULES

      - name: Upload APKs (${{ matrix.chunk.number }})
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: "individual-apks-${{ matrix.chunk.number }}"
          path: "**/*.apk"
          retention-days: 1

   #   - name: Clean up CI files
  #      run: rm signingkey.jks

  release:
    needs: build   # replace "build" with your matrix job name
    runs-on: ubuntu-latest
    steps:
      - name: Download all APK artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./apks

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: ./apks/**/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


